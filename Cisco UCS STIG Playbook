---
- name: UCS Security Hardening and Compliance
  hosts: localhost
  gather_facts: no
  vars:
    ucs_hostname: "ucs-manager.example.com"
    ucs_username: "admin"
    ucs_password: "{{ lookup('ansible.builtin.env', 'UCS_PASSWORD') }}"  # Fetch from environment variable

  tasks:
    - name: Set UCSM connection details
      ansible.builtin.set_fact:
        ucs_auth:
          hostname: "{{ ucs_hostname }}"
          username: "{{ ucs_username }}"
          password: "{{ ucs_password }}"
      no_log: true  # Hides sensitive data

    - name: Configure NTP Servers
      cisco.ucs.ucs_ntp:
        hostname: "{{ ucs_auth.hostname }}"
        username: "{{ ucs_auth.username }}"
        password: "{{ ucs_auth.password }}"
        ntp_servers:
          - "192.168.1.10"
          - "192.168.1.11"
        state: present
      delegate_to: localhost
      no_log: true

    - name: Create a new service profile
      cisco.ucs.ucs_service_profile:
        hostname: "{{ ucs_auth.hostname }}"
        username: "{{ ucs_auth.username }}"
        password: "{{ ucs_auth.password }}"
        name: "SP-01"
        org_dn: "org-root"
        state: present
      delegate_to: localhost
      no_log: true

    - name: Upgrade UCS Firmware
      cisco.ucs.ucs_firmware_policy:
        hostname: "{{ ucs_auth.hostname }}"
        username: "{{ ucs_auth.username }}"
        password: "{{ ucs_auth.password }}"
        name: "Firmware-Policy"
        org_dn: "org-root"
        firmware_bundle: "ucs-fw-bundle-4.2.2a.bin"
        state: present
      delegate_to: localhost
      no_log: true

    - name: Disable SSH and Telnet
      cisco.ucs.ucs_security:
        hostname: "{{ ucs_auth.hostname }}"
        username: "{{ ucs_auth.username }}"
        password: "{{ ucs_auth.password }}"
        ssh: disabled
        telnet: disabled
        state: present
      delegate_to: localhost
      no_log: true

    - name: Enforce strong password policy
      cisco.ucs.ucs_password_policy:
        hostname: "{{ ucs_auth.hostname }}"
        username: "{{ ucs_auth.username }}"
        password: "{{ ucs_auth.password }}"
        min_length: 12
        complexity: high
        expiration_days: 90
        state: present
      delegate_to: localhost
      no_log: true

    - name: Get UCS hardware health
      cisco.ucs.ucs_hardware_inventory:
        hostname: "{{ ucs_auth.hostname }}"
        username: "{{ ucs_auth.username }}"
        password: "{{ ucs_auth.password }}"
      register: ucs_health
      delegate_to: localhost
      no_log: true

    - name: Display UCS Health Summary
      ansible.builtin.debug:
        msg: "{{ ucs_health['hardware'] | default('No hardware health data available') }}"
